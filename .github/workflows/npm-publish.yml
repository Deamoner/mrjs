name: npm-publish
on:
  push:
    branches:
      - main
    paths:
      - 'package.json'

jobs:
  npm-publish:
    name: npm-publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Extract version from commit message
        id: get_version
        run: |
          COMMIT_MESSAGE=$(git log --format=%B -n 1 ${{ github.event.before }})
          if [[ "$COMMIT_MESSAGE" =~ Release\ ([0-9]+\.[0-9]+\.[0-9]+) ]]; then
            echo ::set-output name=VERSION::${BASH_REMATCH[1]}
          else
            echo "Commit message does not specify a release version."
            exit 1
          fi

      - name: Check version in package.json
        run: |
          PACKAGE_VERSION=$(jq -r .version package.json)
          if [[ "$PACKAGE_VERSION" != "${{ steps.get_version.outputs.VERSION }}" ]]; then
            echo "Version in package.json ($PACKAGE_VERSION) does not match the commit message (${{ steps.get_version.outputs.VERSION }})."
            exit 1
          fi

      - name: Create Git tag
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git tag v${{ steps.get_version.outputs.VERSION }}
          git push origin v${{ steps.get_version.outputs.VERSION }}

      - name: Publish if version has been updated
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_MJRS_PUBLISH }}
